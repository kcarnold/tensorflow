FROM nvidia/cuda:7.5-cudnn5-devel-centos6

MAINTAINER Craig Citro <craigcitro@google.com>

RUN yum update -y && yum install -y \
    tar \
    gzip \
    bzip2 \
    zip \
    unzip \
    git \
    swig \
    zlib-devel

# Java
#RUN curl -k -L -H "Cookie: oraclelicense=accept-securebackup-cookie" -O http://download.oracle.com/otn-pub/java/jdk/8u102-b14/jdk-8u102-linux-x64.rpm && rpm -i jdk-8u102-linux-x64.rpm && rm -f jdk-8u102-linux-x64.rpm
#RUN echo 'export JAVA_HOME=/usr/java/jdk1.8.0_102' > /etc/profile.d/java.sh && echo 'export PATH=$PATH:$JAVA_HOME/bin' >>  /etc/profile.d/java.sh && chmod a+x /etc/profile.d/java.sh
#RUN echo 'JAVA_HOME=/usr/java/jdk1.8.0_102' >> /etc/environment

# GCC 5
RUN yum install -y centos-release-scl
RUN yum install -y devtoolset-4-gcc-c++
RUN yum install -y java-1.8.0-openjdk-devel
#RUN echo 'export CC=/opt/rh/devtoolset-4/root/usr/bin/gcc' > /etc/profile.d/gcc.sh
RUN echo 'source /opt/rh/devtoolset-4/enable' >> /etc/profile.d/gcc.sh
RUN chmod a+x /etc/profile.d/gcc.sh
ENV CC=/opt/rh/devtoolset-4/root/usr/bin/gcc


# Bazel
# Running bazel inside a `docker build` command causes trouble, cf:
#   https://github.com/bazelbuild/bazel/issues/134
# The easiest solution is to set up a bazelrc file forcing --batch.
RUN echo "startup --batch" >>/root/.bazelrc
# Similarly, we need to workaround sandboxing issues:
#   https://github.com/bazelbuild/bazel/issues/418
RUN echo "build --spawn_strategy=standalone --genrule_strategy=standalone" \
    >>/root/.bazelrc
ENV BAZELRC /root/.bazelrc
# Install the most recent bazel release.
ENV BAZEL_VERSION 0.3.0
WORKDIR /
RUN git clone https://github.com/bazelbuild/bazel.git
RUN cd bazel && \
    git checkout 0.3.1 && \
    ./compile.sh

# # Anaconda 3
RUN curl -kL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o Miniconda3.sh
RUN bash Miniconda3.sh -b -f -p /opt/conda
ENV PATH /opt/conda/bin:$PATH

# # TensorFlow.
RUN git clone -b r0.10 --recursive https://github.com/tensorflow/tensorflow.git
RUN cd tensorflow && \
    git checkout r0.10 && \
    git submodule update --init --recursive
# Fix issue https://github.com/tensorflow/tensorflow/issues/4058
RUN git cherry-pick 4c49dbebef05442c7e72d6129a30574fcd13f0e1
WORKDIR /tensorflow

# # Configure the build for our CUDA configuration.
ENV CUDA_TOOLKIT_PATH /usr/local/cuda
ENV CUDNN_INSTALL_PATH /usr/local/cuda
ENV TF_NEED_CUDA 1

RUN conda install -y numpy scipy

RUN cp -a /bazel/output/bazel /usr/local/bin
RUN ./configure
ENV CXX=/opt/rh/devtoolset-4/root/usr/bin/g++
RUN bazel build -c opt --config=cuda tensorflow/tools/pip_package:build_pip_package
RUN bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip
#    pip install --upgrade /tmp/pip/tensorflow-*.whl

# WORKDIR /root

# # Set up CUDA variables
# ENV CUDA_PATH /usr/local/cuda

# # Notebook
# RUN conda install -y jupyter matplotlib
# # Set up our notebook config.
# COPY jupyter_notebook_config.py /root/.jupyter/

# # Jupyter has issues with being run directly:
# #   https://github.com/ipython/ipython/issues/7062
# # We just add a little wrapper script.
# COPY run_jupyter.sh /



# # TensorBoard
# EXPOSE 6006
# # IPython
# EXPOSE 8888

# RUN ["/bin/bash"]
